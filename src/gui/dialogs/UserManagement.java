package gui.dialogs;

import db.DBHandler;
import db.DBUser;
import gui.GUIAux;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.util.Iterator;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import org.apache.commons.codec.digest.DigestUtils;

/**
 * GUI for KB users management for VSEGRAF project.
 * 
 * @author Alois Seckar [ ellrohir@seznam.cz ]
 * @version 0.1
 * @since 2015-04-02 22:43 GMT+1
 */
public class UserManagement extends javax.swing.JDialog {
    
    /**
     * Currently edited user.
     */
    DBUser currentUser = null;

    /**
     * Creates new form UserManagement
     * @param parent
     * @param modal
     */
    public UserManagement(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        finalizeComponents();
        getUserList();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        userListLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        userList = new javax.swing.JList();
        userDetailsLabel = new javax.swing.JLabel();
        userDetailsLogin = new javax.swing.JLabel();
        userDetailsName = new javax.swing.JLabel();
        userDetailsNameText = new javax.swing.JTextField();
        userDetailsLevel = new javax.swing.JLabel();
        userDetailsLevelSpinner = new javax.swing.JSpinner();
        saveUserButton = new javax.swing.JButton();
        resetPassButton = new javax.swing.JButton();
        newUserButton = new javax.swing.JButton();
        closeButton = new javax.swing.JButton();
        userDetailsLoginText = new javax.swing.JLabel();
        deleteUserButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        userListLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        userListLabel.setText("LIST");

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        userList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(userList);

        userDetailsLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        userDetailsLabel.setText("USER");

        userDetailsLogin.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        userDetailsLogin.setText("Login:");

        userDetailsName.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        userDetailsName.setText("Name:");

        userDetailsLevel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        userDetailsLevel.setText("Level:");

        userDetailsLevelSpinner.setModel(new javax.swing.SpinnerNumberModel(1, 1, 3, 1));

        saveUserButton.setText("Save");
        saveUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveUserButtonActionPerformed(evt);
            }
        });

        resetPassButton.setText("Reset password");
        resetPassButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetPassButtonActionPerformed(evt);
            }
        });

        newUserButton.setText("New");
        newUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newUserButtonActionPerformed(evt);
            }
        });

        closeButton.setText("Close");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        userDetailsLoginText.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        userDetailsLoginText.setText("Login");

        deleteUserButton.setText("Delete");
        deleteUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteUserButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                    .addComponent(userListLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(userDetailsLevel, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(userDetailsLevelSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(userDetailsName, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(userDetailsLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(userDetailsLoginText, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(userDetailsNameText)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(resetPassButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(2, 2, 2))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(saveUserButton, javax.swing.GroupLayout.DEFAULT_SIZE, 58, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(newUserButton)
                                .addGap(1, 1, 1)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(closeButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(deleteUserButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(userDetailsLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userListLabel)
                    .addComponent(userDetailsLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(userDetailsLogin)
                            .addComponent(userDetailsLoginText))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(userDetailsName)
                            .addComponent(userDetailsNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(userDetailsLevel)
                            .addComponent(userDetailsLevelSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(saveUserButton)
                            .addComponent(newUserButton)
                            .addComponent(deleteUserButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(closeButton)
                            .addComponent(resetPassButton)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
 
    private void saveUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveUserButtonActionPerformed
        // save current user in db with current values
        currentUser.setUserName(userDetailsNameText.getText());
        currentUser.setUserLevel((int)userDetailsLevelSpinner.getValue());
        // save in db
        DBHandler.updateObject(currentUser);
        //
        infoMessage("User details saved");
    }//GEN-LAST:event_saveUserButtonActionPerformed

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        // close this dialog
        dispose();
    }//GEN-LAST:event_closeButtonActionPerformed

    private void newUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newUserButtonActionPerformed
        // create brand new user entry
        // pass SHA1 hash see - http://stackoverflow.com/a/6706816/3204544
        // TODO add "name must be unique" check
        String name = GUIAux.getStringDialog(this, "Type in user's login:");
        String pass = DigestUtils.sha1Hex(
                GUIAux.getStringDialog(this, "Type in user's password:"));
        DBUser newUser = new DBUser(name, pass, 1, "New user");
        // save in db
        DBHandler.saveObject(newUser);
        // change gui values
        // TODO get rid of "newUser" - use "currentUser" instead
        // TODO check if working... (???)
        loadUserDetails(newUser); 
        // reload user list
        getUserList();
        // enable control buttons
        enableButtons(true);
        //
        infoMessage("New user created");
    }//GEN-LAST:event_newUserButtonActionPerformed

    private void resetPassButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetPassButtonActionPerformed
        // get new password and hash it with SHA1
        // http://stackoverflow.com/a/6706816/3204544
        String pass = DigestUtils.sha1Hex(
                GUIAux.getStringDialog(this, "Type in new password:"));
        // set it and save it
        currentUser.setUserPass(pass);
        DBHandler.updateObject(currentUser);
        //
        infoMessage("Password successfully changed");
    }//GEN-LAST:event_resetPassButtonActionPerformed

    private void deleteUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteUserButtonActionPerformed
        if (GUIAux.showQuestionDialog(this, 
                    "Do you really want to delete displayed user?") == 0) {
            // delete currenly loaded user
            DBHandler.deleteObject(currentUser);
            // change gui values using mock object
            loadUserDetails(new DBUser("-", "", 1, "Deleted"));
            // reload user list
            getUserList();
            // disable control buttons
            enableButtons(false);
            //
            infoMessage("User deleted");
        }
    }//GEN-LAST:event_deleteUserButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closeButton;
    private javax.swing.JButton deleteUserButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton newUserButton;
    private javax.swing.JButton resetPassButton;
    private javax.swing.JButton saveUserButton;
    private javax.swing.JLabel userDetailsLabel;
    private javax.swing.JLabel userDetailsLevel;
    private javax.swing.JSpinner userDetailsLevelSpinner;
    private javax.swing.JLabel userDetailsLogin;
    private javax.swing.JLabel userDetailsLoginText;
    private javax.swing.JLabel userDetailsName;
    private javax.swing.JTextField userDetailsNameText;
    private javax.swing.JList userList;
    private javax.swing.JLabel userListLabel;
    // End of variables declaration//GEN-END:variables

    private void getUserList() {
        // GET ENTRIES FROM DB AND TURN THEM INTO LIST 
        DefaultListModel listModel = new DefaultListModel();
        Iterator itr = DBHandler.getListOfObjects("FROM DBUser ORDER BY xname");
        while (itr.hasNext()) {
            DBUser user = (DBUser) itr.next();
            listModel.addElement(user.getUserLogin());
        }
        // SET THIS LIST FOR INDEX OF ENTRIES
        userList.setModel(listModel);
    }

    private void finalizeComponents() {
        // listener for kb items list browsing
        // http://stackoverflow.com/a/5609251
        MouseListener mouseListener = new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                // get currently selected index entry
                if (userList.getSelectedIndex() < 0) {
                    userList.setSelectedIndex(0);
                }
                String selectedItem = (String) userList.getSelectedValue();
                // load entry data from db
                currentUser = (DBUser) DBHandler.getSingleObject(
                        "FROM DBUser WHERE xname='" + selectedItem + "'");
                // fill gui elements with data
                loadUserDetails(currentUser);
                // enable control buttons
                enableButtons(true);
            }
        };
        userList.addMouseListener(mouseListener);
        
        // set window title
        this.setTitle("VSEgraf - User management");
    }

    private void loadUserDetails(DBUser user) {
        // fill GUI with given user details
        userDetailsLoginText.setText(user.getUserLogin());
        userDetailsNameText.setText(user.getUserName());
        userDetailsLevelSpinner.setValue(user.getUserLevel());
    }

    private void enableButtons(boolean enabled) {
        // TODO scrap this using simulated mouse click on user list - but HOW???
        // disable or enable control buttons
        // buttons has to be disabled after user is deleted
        // and enabled whenever the control actions should be 
        saveUserButton.setEnabled(enabled);
        deleteUserButton.setEnabled(enabled);
        resetPassButton.setEnabled(enabled);
    }
    
    private void infoMessage(String message) {
        // display simple message for user
        JOptionPane.showMessageDialog(this, message,
                "VSEGraf - user management", JOptionPane.INFORMATION_MESSAGE);
    }
}
